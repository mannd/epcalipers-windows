<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>