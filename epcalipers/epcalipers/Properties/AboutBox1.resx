<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALMAAAEPCAYAAAAJa/VJAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        pwAAAacBqI98XwAAAAd0SU1FB+AFFwQZJ+a95dsAABBVSURBVHhe7d15jBTVGgVwpmdnZpgdZkdwA4z7
        hhHxxRg0QRMTMQi4RI1bXIj+IUFjFDAEEzVRA664RTGYqIlg9A93BYxxi7vRuO+7KIKy1Ouv4uBM95mu
        pW9X13fveckvT89U1e2Zvs5036o6PSr7P4/IEjAk0giGRBrBkEgjGBJpBEMijWBIpBEMiTSCIZFGMCTS
        CIZEGsGQSCMYEmkEQyKNYEikEQyJNIIhkUYwJNIIhkQawZBIIxgSaQRDIo1gSKQRDIk0giGRRjAk0giG
        RBrBkEgjGBJpBEMijWBIpBEMiTSCIZFGMCTSCIZEGsGQSCMYEmkEQyKNYEikEQyJNIIhkUYwJNIIhkQa
        wZBIIxgSaQRDIo1gSKQRDIk0giGRRjAk0giGRBrBkEgjGBJpBEMqQqa11WuYN8/rWLXK69qwwev78kuf
        /LNkDXPnepmWFrgvFQWGFINM4tZly7yBv/7yxnteQQN//+213XgjJ7VZMKSI6qZP9/p++AFO3EL6vvvO
        q502DR6TIoMhRSAvKeQ3LZqsYci+DXPmwGNTJDCkkOS36sCWLXCSRjHwzz9e3ZFHwjEoNBhSCPJ6t+/7
        7+HkjENecmSam+FYFAoMKYTWa6+Fk7IYLUuXwrEoFBhSAPmtHGbVIqqBTZv42zk+GFIAedOHJqMJDSef
        DMekQDCkAB333w8nogkd990Hx6RAMKQAXS+/DCeiCV3r1sExKRAMKUDv55/DiWhC76efwjEpEAwpgEw4
        NBFN6P3kEzgmBYIhBehavx5ORBO6XnwRjkmBYEgB5E0amogmtN9zDxyTAsGQAjTMng0nogmjZ82CY1Ig
        GFKAzJgx/gkONBmLMfDnn16mqQmOSYFgSCG0XHMNnJDFaLn6ajgWhQJDCkF+O/d98w2clHH0ffUVfysX
        B4YUUu1hh5m5BHTzZq926lQ4BoUGQ/pXpr3dq6irg18bNPqkk/zJiCZpGLLv6BNPhMceqrKz06uorYVf
        Ix8MKat6jz38K+P6f/zRa77yyoL368lv1b6vv4aTtRB5aVF7yCHwmINq9t3X61y92hu/fbs37pln4Dbk
        gyFlyXrv0Ik38Mcf/k2old3dcPuKhgZvzIIFXv/vvw/bD5FVC7n5VV53o2OJmv339zofesgbv2PHsH3r
        jjoKbk84dF7VwIB/K9PQSTRIXiO333abV9nXB/etaGz014rb77rLP5vX+/HHvq4XXvDaV670X1LINmhf
        IbdijV2zBo4txj39NNyPcOi8tltugRNpKLkRVc4EyssRdIyo6o4+OvRp8trDD4fHcBwMnVbZ1RXtLpLs
        a1l5OVA9ZQo8XkGZjFd//PFe9yuv4GOPQH5zw+O5DYZOa73+ejiBAmUntUyymoMPhscdJjuJZRWk5733
        8LFCqDnwQHxsd8HQWZmODv/NGZo8oWXfsI197LER39zV/e9//mWecN8I5K8BOr7DYOisliVL4MSJo37G
        DDhGxwMPwO0jy/4lqJ40CY7hKBg6SX6T9v/6K544ImeJrBApSqyoqYHj1B9zDNwHChiTl4sOA0MnNV9x
        Rd5kkTeCzZdfvnNtWf6/eeHCwDeITRddlHf8oYLe8I1du9arPfRQb1RlpX8GUt4k9rz9dt52snxYNWEC
        HMNBMHROxejRecWHhSqzpChxpHVoaSaqqK+H+w0afcIJcF/Rfscd3qiKirx95KQM+o9AlhFzt3UUDJ0z
        5pJL8ifJzTfDbQe1LV+et48Yc9llcPthspO156238vbt/+mngidUag44IG8fOYlT2dsLt3cMDJ0iF+/I
        NRK5kyTotLF8PXef/p9/Dn0Zp5SO5+7f8eCDcNuh0M20spyItnUMDJ3SdN55eZND1Oy3H9x+kHw9d59I
        F9dnXw/3fPjhsP3bVqzA2w7R/eqrw/YRspwoV9Wh7R0CQ3dkJ1TvRx/lTQ7RcMopeJ9/ydeHbu/f8tTR
        AbcdSeNZZw07xrjnnoPbDZIVkpEuZJI7X9A+DoGhMxpOOw1ODCFvtuRMHdpP/iPIbTWSVlC4bQEV1dVe
        72ef/Xec7dv918VoW9F0/vnDxhxKJrnjHysBQzdkJ2rPO+/AiTFIVhZy14vl39tvv33YdnKB/UiXhgaR
        Zbyhx5Kzg9V77pm3Xf2xxwbeRCvLi7n7OQSGTpBrI9CEyCWXb7YsWuQ1nnOO17J4sf/vudu03XQTHCMM
        WUfOvZfQv8z07rv938RN8+d7Yx9/PNRJm6DVEMvB0AnojVQc/omL8ePhGGHJch46dhyyzIjGcAAMrVc/
        cyacCHG033knHCMKOSEit2eh40fV9+23gfctWgqG1ut66SU4ESLbts3YxfmyrAfHiEGWG9EYloOh1dDJ
        jrjkCjg0RhyZtjavf+NGOE5UUrkrKyVoHIvB0GpyDx2aAJFl35BV7703HCMukx/6I8uOaAyLwdBaciUa
        euLj6Hz0UThGMSrHjTP2wT89778/8jq5nWBorUJ3PUcV6vaoGGSZD40Xhyw/ojEsBUMrSZlKlAvsCxn7
        5JNwDBOkwqCYjy8eqvvNN+HlpJaCoZX8QhXwhMdRe8QRcAxTZLkPjRuHLEOiMSwEQ+vI6WG57gE92VFJ
        twUaw6SqXXf1xm/dCsePSq4hQWNYCIbWya3aKobcw4fGMM3Yja9ZjlR6wdAqhaq2oup+/fXEXoNWT55s
        7K+JI5VeMLRKmKqtsOTePTRGqcjyH3occThQ6QVDa0Su2ipA2oeSXreVJlBjKzD2V3rB0Bqxq7YAuWcP
        jVFqsgyIHk8clld6wdAK0novncroSY1KrmEeVVUFxyk1+agJ9JjisLzSC4ZWMPlpUHKvHhojKdLtjB5X
        ZFLptddecAwLwFC9wKqtCHq/+GLEqq2kRKr0CmBxpRcM1UNVW3E1XXghHCNpUTucR7R1q62VXjBUDVVt
        xYWqtqQ0pmrixJJCnypVqNIrKksrvWCoGqraigtVbcmllWhbk3refTdv3JEqveKwtNILhmqNVLUVB6za
        ymTgtqWA1rRRpVdcFlZ6wVCtkaq24mi+6qr8Mco8mVGlV1zSwWFZpRcMdSpQtRXViFVb5Z7MWbmVXsWw
        rNILhioVqtqKasSqrRRM5rxKryJYVukFQ32yT3xQ1VZYBau2sm/CTF1nXIhc5Vfo6rzcSq9iWFTpBUN1
        wlZthRFUtSV/AeQTWkup4dRT4diDUKVXXBZVesFQnTRVbSWFlV55YKhK2qq2ksJKrzwwVCWNVVtJYaXX
        MDBUI61VW0lhpdcwMFQjzVVbSWGl104wVCHtVVtJYaXXTjBUQUPVVlJY6eWDYeppqdpKCiu9fDBMPU1V
        W0lhpRcOU6160iRzVVvr1sExNGKlFw5TrePee+ETEEf9jBlwDK0cr/SCYWpprdpKiuOVXjBMLc1VW0lx
        uNILhqlktGpL7rHTu55akMOVXjBMpdYbboA/8Dga5syBY9jC0UovGKaOLVVbSXG00guGqWNT1VZSHKz0
        gmGq2Fa1lRQHK71gmCo2Vm0lxVil17ZtXtVuu8ExUgSGqVHqqi3bOVbpBcPUKHXVlvXcqvSCYSqUvGrL
        EQ5VesEwFUpeteUKdyq9YFh+SVRtOcSRSi8Yll0iVVsOcaTSC4bllVTVlmMcqPSCYVklWbXlEgcqvWBY
        Vi5WbSXF8kovGJZN/XHHwR9cHO133AHHcJnxSq90nYSCYdmYrNqq2n13OIbrZJkS/sxiSFmlFwzLwvWq
        raRkmpu9/t9+gz+3qFJW6QXDsmDVVnIsrfSCYeKMVm098ggcg/7jV3pt2gR/flGlqNILhokbu3Yt/EHF
        ob1qKykWVnrBMFGs2ioPCyu9YJgoVm2Vj2WVXjBMDKu2ysuySi8YJoZVW+VnUaUXDBPBqq10sKjSC4aJ
        YNVWelhS6QXDkmPVVrpYUukFw5Jj1Vb6WFDpBcOSYtVWOllQ6QXDkmLVVnopr/SCYcmwaivdlFd6wbBk
        WLWVfoorvWBYEqza0kFxpRcMS2LMpZfCbzgOJ6u2kqK30guGxrFqSxdZ7kQ/+zhkGRaNUQIwNI5VW8ro
        rPSCoVms2lJJYaUXDI1qPP10+A3G0bpsGRyDzFNY6QVDc1i1pZosf6LnIo4EKr1gaAyrtnRTVukFQ2NY
        taWfokovGBrBqi07KKr0gqERrNqyh5JKLxgWjVVbdlFS6QXDorFqyz4KKr1gWBRWbdlJQaUXDIvCqi17
        pbzSC4axsWrLbimv9IJhbKzasp8sk6LnKw5ZvkVjxATDWExWbY17/nk4BpVf1cSJaa30gmEsrNpyR0or
        vWAYGau23JLSSi8YRsaqLffIsil6/uIwVOkFw0j8qq3Nm+GDjIpVW3oYrfRauxaOEREMI2HVlrtSVukF
        w9Ay2d/K4w39VpZbq+QWKzQOpVPttGnwuYyj69ln4RgRwDC0tuXL4QOLg1VbOskyKno+I8u+ZJHLTdEY
        IcEwNFMXFLFqSy+54B49p3HIqhgaIyQYhta5Zg18UFE1L1wIj0/pJ50oRk6ibN9e7KWhMAytbuZM/MAi
        kJUQVm3pJgXj6LmNovu11+CxI4BheNk3bAMbN8IHF1Yrb1RVr3rKFPjcRlE7dSo8dgQwjKTpggvggwtj
        IPvniVVbdugtogGpfeVKeMyIYBhNJuPfCoMeZJDOhx/GxyR1Gs84Az7HgeRuosmT4TEjgmFkLYsX4wda
        gFwXK3cvoOORPvK+J87He4x94gl4vBhgGFnVhAmRLzxpWbIEHov0inMnirT1o2PFAMNYIq05Z18ry10L
        6Dikl9x8DJ/vEfR88IHJKyRhGEvDvHnwASNl+jQiSkDXhg3wOUeazj0XHiMmGMYivWT9v/wCH3SuuunT
        4TFIv8Yzz4TPeS6ZK0Wevs4Fw9jaVqyAD3woaQXlxff2kjeCYT5RrGXpUrh/EWAYW81BB8EHPlTj2WfD
        fckegRegZd8zVfX3w32LAMOidL/xBv4GsuS/WMN/WiiFavbZBz7/gzpWrYL7FQmGRWmaPx9+A6L1uuvg
        PmSfQp8nKK1XaJ8iwbAo/mdjb9mS/03s2ME2T4fIy8m8OZDVtX493N4AGBatc/XqvG9CrqxC25KdpCVf
        Psskdx40zJ4NtzcAhkVDn8Fs8EwPKdF2663D5oB8FmSJ6mwFDIsnFx8N+aQi//4+3nXtHLlJdehkHrNg
        AdzOEBga0bJo0c5vounii+E2ZD+56F7mgNThyvsptI0hMDSiapdd/IuP5EoqaV5H25D9Bj+dV06ooa8b
        BENjxj31lL+Ajr5Gbhh8I2jomuVCYGhMw9y5/BgH8kbPmgVzw2BoDt/0UXJgSKQRDIk0giGRRjAk0giG
        RBrBkEgjGBJpBEMijWBIpBEMiTSCIZFGMCTSCIZEGsGQSCMYEmkEQyKNYEikEQyJNIIhkUYwJNIIhkQa
        wZBIIxgSaQRDIo1gSKQRDIk0giGRRjAk0giGRBrBkEgjGBJpBEMijWBIpBEMiTSCIZFGMCTSCIZEGsGQ
        SCMYEmkEQyKNYEikEQyJNIIhkUYwJNIIhkQawZBIIxgSaQRDIo1gSKQRDIk0giGRRjAk0giGRBrBkEgj
        GBJpBEMijWBIpMwo7//4HsU/DNM3tQAAAABJRU5ErkJggg==
</value>
  </data>
</root>